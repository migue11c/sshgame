// LOGIC

DICE:
Each die will represent a body part.
    MND Head/Mind/Perception
    FRC Right arm/Force/Strength
    TEC Left arm/Technique/Dexterity
    AGL Right leg/Agility/Speed
    STL Left leg/Stability
    EMT Chest/Heart/Emotion (this die cannot be changed and it rolls a d6, total roll is between 0 and 20)

EMOTION:
    It is consisting of two values EMT roll and EMT modifier.
    EMT modifier is a controllable variable that goes from 0 to 14.
    This assures that emotion rolls go from 0 to 20. Not higher or lower.

SKILLS:
    Each skill will use a different formula for rolling clash/damage.
    Skills are learnt and will be arrangable in a deck of several cards.
    Combat system is almost fully copied from ruina except you roll a single number.
    Every skill will have its' own damage rolling formula. It is very possible to outscale your enemies (and intentional).
    Example:
        Moulinet ((EMT/10)*(5+2xSTB+AGL))

LOSS OF A FIGHT DOES NOT RESULT IN DEATH:
    There will be fights you will have to face alone, and there will be operations where you command a squad.
    Your own character is a priority. You will be tested by your squadmates.
    Loss of HP determines an unsuccessful operation. It will come with a time penalty along with an emotion penalty.

VICTORY IS IMMINENT:
    No matter your background, every choice, even if crippling, will scale you tenfold.
    Treat this as a DND session. There are no wrong choices, only different content.
    You will most definetly miss out on other things. Every player will have a different experience.


// DATA
Refactor getPoi() to make a 3 dimensional data vector.
Refactor Poi rendering to look for points of interest in their respective sectors.
Also add 2 points of reference. Starting and selected.

CHECK ALL SAVE DATA TYPES.

SAVE DATA SPECIFICATIONS NEED TO BE VERY SPECIFIC AND HAVE EXACT SIZES
SO THEY CAN BE ENCODED, SENT OVER THE NETWORK, AND DECODED EXTREMELY EASILY.
SEND DATA IN BULK THROUGH TCP IT IS NOT THAT BIG DUDE.

MAKE SURE TO CREATE A SPECIAL PACKING AND UNPACKING CPP SO BOTH CLIENT AND SERVER CAN USE IT

PLAYER SAVE DATA STRUCTURE:
    Name (char[16])
    Faction (uint) // faction id
    Position // 3 position ids
        - Region (uint)
        - District (uint)
        - Place (uint)
    Time
        - Hour (uint)
        - Day (uint) // this var is ONLY checked and changed by the server
    Dice (uint[6]) // 6 dice
    Items (bool[128]) // 128 items, expand if necessary

    Right now there is hp and maxhp. I guess it can be used.

WORLD DATA STRUCTURE:
    MOTD (char[256])
    Day (uint)
    Danger (uint[25])
    Trains (array) // TBD
        Starting position
            - Region (uint)
            - District (uint)
            - Place (uint)
        Ending Position (same)
        Departure time (uint) // hour of departure


// VECTOR RENDER
After implementing render.cpp:
    - Change map render data directory
    - Use PlayerData for:
        - Camera anchor
        - Initializing camera
        - Hidden nodes
